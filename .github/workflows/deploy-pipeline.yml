name: quarkus-project-deploy

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      k8sProvider:
        description: 'Deploy Cluster Name.'
        required: true
        type: string  
        default: 'AKS'
      secretsName:
        description: 'ImagePullSecret Name.'
        type: string
        default: ''
        
env:
  deploymentYamlPath: "${{ github.workspace }}/k8s/application-deployment.yaml" 
  ingressYamlPath: "${{ github.workspace }}/k8s/ingress.yaml"  
  deployFilesPath: "${{ github.workspace }}/k8s"
  k8sNamespace: "hangar" 
  provisionPipeline: "aks-provisioning.yml"
  ciPipelineYamlName: "ciPipelineYamlName.yml"

jobs:
  Deploy_to_AKS:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.k8sProvider == 'AKS' }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
        
      - name: Download artifact from AKS provision pipeline workflow
        uses: dawidd6/action-download-artifact@v2
        continue-on-error: true
        with:
          workflow: ${{ env.provisionPipeline }}
          check_artifacts:  true
          search_artifacts: true
          name: kubeconfig 
          
      - name: Set EKS Environment Variables
        uses: tw3lveparsecs/github-actions-setvars@v0.1
        with:
          envFilePath: ".github/vars/*"
          
      - name: Deploy app to AKS  
        env:
          KUBECONFIG: "${{ github.workspace }}/kubeconfig"
          imagename: "ultimatom/package_image_test:latest" #"$imagename"
        run: |
          chmod +x .github/workflows/scripts/deploy.sh
          .github/workflows/scripts/deploy.sh "${{ env.k8sNamespace }}" "${{ env.imagename }}" "${{ env.dns_name }}" "${{ env.deploymentYamlPath }}" "${{ env.ingressYamlPath }}" "${{ env.deployFilesPath }}" 
        shell: bash 
        
      - name: list pods
        env:
          KUBECONFIG: "${{ github.workspace }}/kubeconfig"
        run: |
          kubectl get all -n "${{ env.k8sNamespace }}"
          kubectl get svc -n nginx-ingress
          
      - name: Create secrets for AKS
        if: ${{ github.event.inputs.k8sProvider == 'AKS' && github.event.inputs.secretsName != '' }}
        env:
          KUBECONFIG: "${{ github.workspace }}/kubeconfig"
          secretsName: "$secretsName"
        run: |
          chmod +x .github/workflows/scripts/secrets.sh
          .github/workflows/scripts/secrets.sh "${{ env.k8sNamespace }}" "${{ env.secretsName }}" "${{ env.docker_username }}" "${{ env.docker_password }}" "${{ env.registry }}" "${{ env.deploymentYamlPath }}" 
        shell: bash 

  Deploy_to_EKS:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.k8sProvider == 'EKS' }} 
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      
      - name: Set EKS Environment Variables
        uses: tw3lveparsecs/github-actions-setvars@v0.1
        with:
          envFilePath: ".github/vars/*"
                             
      - name: Deploy app to EKS 
        env:
          imagename: '$imagename' 
        run: |
          aws eks update-kubeconfig --name ${{ env.cluster_name }} --region ${{ env.aws_region }}
          chmod +x .github/workflows/scripts/deploy.sh
          .github/workflows/scripts/deploy.sh "${{ env.k8sNamespace }}" "${{ env.imagename }}" "${{ env.dns_name }}" "${{ env.deploymentYamlPath }}" "${{ env.ingressYamlPath }}" "${{ env.deployFilesPath }}"  
        shell: bash
          
      - name: Create secrets for EKS
        if: ${{ github.event.inputs.k8sProvider == 'EKS' && github.event.inputs.secretsName != '' }}
        env:
          secretsName: '$secretsName'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws eks update-kubeconfig --name ${{ env.cluster_name }} --region ${{ env.aws_region }}
          chmod +x .github/workflows/scripts/secrets.sh
          .github/workflows/scripts/secrets.sh "${{ env.k8sNamespace }}" "${{ env.secretsName }}" "${{ env.aws-access-key-id }}" "${{ env.aws-secret-access-key }}" "${{ env.registry }}" "${{ env.deploymentYamlPath }}"
        shell: bash  
        
     

       
          
  
      
